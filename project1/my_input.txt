# Deleting a parent process will delete its children.
cr x 2
cr y 1
to
cr z 2
to
req R1 1
to
req R1 1
de z
rel R1 1
de x

# Deleting a blocked process will remove itself from the blocked list and all waiting lists and free resources.
init
cr x 1
cr p 1
cr q 1
cr r 1
to
req R2 2
to
req R3 2
to
req R4 1
to
to
req R3 2
req R4 4
req R2 1
to
de q
to
to
req R1 2

# Deleting a currently running process with two children.
init
cr x 2
cr y 1
cr z 1
de x

# Deleting a parent process whose child is currently running.
init
cr x 1
cr y 1
cr z 1
to
to
de x

# Releasing more than the total available resources.
init
rel R1 5

# Releasing a resource that hasn't been requested.
init
rel R1 1

# Releasing a resource that doesn't exist.
init
rel R10 6

# Deleting a process that doesn't exist.
init
de a

# Creating a duplicate process.
init
cr x 1
cr x 2

# Creating a process with priority 0.
init
cr x 0

# Deleting init.
init
de init

# Init acquiring a resource.
init
req R1 1

# Init releasing a resource.
init
rel R1 1

# Requesting 0 resources.
init
cr x 1
req R1 0
req R4 0

# Releasing 0 resources before allocation.
init
cr x 1
rel R1 0

# Releasing 0 resources after allocation.
init
cr x 1
req R2 2
rel R2 0

# Removing all consumers from the consumer list of one resource.
init
cr x 1
cr y 1
cr z 1
req R3 1
to
req R3 1
to
req R3 1
de x

# Release all resources held by subprocesses by deleting a parent process with many children.
init
cr a 1
cr b 1
cr c 1
cr d 1
req R1 1
to
req R2 1
to
req R2 1
req R3 3
to
req R4 4
de a

# Releasing a resource held by another process.
init
cr x 1
req R2 2
cr y 2
rel R2 2

# Multiple processes being unblocked from the RCB waiting list by calling rel.
init
cr x 2
cr y 2
cr z 2
to
req R4 4
to
req R4 3
req R4 1
rel R4 4
to
to

# Multiple processes being unblocked from the RCB waiting list by calling de.
init
cr x 2
cr y 2
cr z 2
to
req R4 4
to
req R4 3
req R4 1
de y
to
to